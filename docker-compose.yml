services:
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
      - ./gradle-cache:/root/.gradle
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: "jdbc:postgresql://database:5432/flightflexdb"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://database:5432/flightflexdb"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "post"
    depends_on:
      - database
    networks:
      - flightflex-network

  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: post
      POSTGRES_DB: flightflexdb
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - flightflex-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_BASE_URL: "http://localhost:8080"
        WDS_SOCKET_HOST: "127.0.0.1"
        CHOKIDAR_USEPOLLING: "true"
        WATCHPACK_POLLING: "true"
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - CHOKIDAR_INTERVAL=1000
      - REACT_APP_BASE_URL=http://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    restart: always
    command:
      ["sh", "-c", "rimraf build && rimraf node_modules/.cache && npm start"]
    stdin_open: true
    tty: true
    networks:
      - flightflex-network

networks:
  flightflex-network:
    name: flightflex-network
    driver: bridge

volumes:
  postgres-data:
    driver: local
